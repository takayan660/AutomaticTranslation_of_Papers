#!/bin/sh

if [ -z $1 ]; then
    echo 'no'
    exit 1
fi

if [ -z $2 ]; then
    FILENAME=$(echo $1 | sed 's/\.pdf//')
elif [ -n $2 ]; then
    FILENAME=$2
fi

set -u

### Move to file location ###
cd `pwd`

PDFNAME=$1
FOLDERNAME=$FILENAME
LANGUAGE=ja

#atexit() {
#    [[ -n ${TMPFILE}* ]] && rm -f "${TMPFILE}*"
#}
PDFTOTEXT_TMP_DIR=`mktemp -d`
trap atexit EXIT
trap '[ -n ${PDFTOTEXT_TMP_DIR} ] && rm -f "${PDFTOTEXT_TMP_DIR}"' 1 2 3 15

if [ ! -d $FOLDERNAME ]; then
    mkdir -p $FOLDERNAME
fi

cd ${FOLDERNAME}

### PDF to text ###
PAGES_NUM=$(pdfinfo ../${PDFNAME} | grep -i pages | awk '{print $2}')

for i in `seq 1 $PAGES_NUM`
do
    pdftotext -f $i -l $i ../${PDFNAME} ${PDFTOTEXT_TMP_DIR}/Former${i}
done

### Shaping ###
for i in `seq 1 $PAGES_NUM`
do
    sed -e ':loop; N; $!b loop; s/\([0-9,A-z,-,",¨]\)\n/\1 /g' ${PDFTOTEXT_TMP_DIR}/Former${i} > ${PDFTOTEXT_TMP_DIR}/Former${i}_1
    sed 's/\(\.\) \([A-Z]\)/\1\n\2/g' ${PDFTOTEXT_TMP_DIR}/Former${i}_1 > ${PDFTOTEXT_TMP_DIR}/Shaping${i}
done

### trans ###
echo "\documentclass{jsarticle}" > ${FILENAME}.tex
echo "\\\begin{document}" >> ${FILENAME}.tex

for i in `seq 1 $PAGES_NUM`
do
    trans -b -i ${PDFTOTEXT_TMP_DIR}/Shaping${i} :${LANGUAGE} >> ${FILENAME}.tex
    echo "\\\newpage" >> ${FILENAME}.tex
done 

echo "\\\end{document}" >> ${FILENAME}.tex

### LaTeX ###
ptex2pdf -l ${FILENAME}.tex
if [ -f ${FILENAME}.dvi ]; then
    dvipdfmx ${FILENAME}.dvi
fi

### PDF display ###
#evince ${FILENAME}.pdf
